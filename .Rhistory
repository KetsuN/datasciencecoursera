install.packages("KernSmooth")
install.packages("KernSmooth")
library(KernSmooth)
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
set.seed(1)
rpois(5, 2)
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10,1,20)
y <- 0.5 + 2 * x + e
plot(x, y)
library(datasets)
rprof()
Rprof()
fit <- lm(y ~ x1 + x2)
?qpois
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", "quizOneFile.csv")
read.csv(quizOneFile.csv)
read.csv("quizOneFile.csv")
properties <- read.file("quizOneFile.csv")
properties <- read.csv("quizOneFile.csv")
properties$VAL
properties$VAL[which $val == 24]
properties[which(properties[, $val] == 24), $val]
properties[which(properties[, $val] == 24), ]$val
properties[which(properties$val) == 24]
properties[which(properties$val,) == 24,]
properties[which(properties$val == 24), ]
sort (properties$val)
sort (properties$val, na.rm = TRUE)
sproperties$val
properties$val
properties$VAL
properties[which(properties$VAL == 24), ]
sort(properties$val)
sort(properties$VAL)
properties[which(properties$VAL == 24), ]
nrow(properties[which(properties$VAL == 24), ])
properties$FES
properties$FES
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx", "quizOneXls.xlsx")
library(xlsx)
library(XLSX)
read.xlsx()
library(xlsx)
library(gdata)
require("xlsx")
library ("xlsx")
library(openxlsx)
library(gdata)
install.packages("xlsx")
library(xlsx)
install.packages("gdata")
library(gdata)
read.xls("quizOneXls.xlsx")
install.packages("openxlsx")
library(openxlsx)
read.xlsx("quixOneXls.xlsx")
read.xlsx("quizOneXls.xlsx")
?read.xlsx
read.xlsx("quizOneXls.xlsx", sheet = 1)
getwd()
install.packages("rjava")
install.packages("rJava")
library(xlsx)
library(xlsx)
read.xlsx("quixOneXls.xlsx", sheetIndex = 1, header = TRUE, colIndex = 7:15, rowIndex = 18:23)
read.xlsx("quizOneXls.xlsx", sheetIndex = 1, header = TRUE, colIndex = 7:15, rowIndex = 18:23)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx", "quizOneXls.xlsx", mode = "wb")
read.xlsx("quizOneXls.xlsx", sheetIndex = 1, header = TRUE, colIndex = 7:15, rowIndex = 18:23)
dat <- read.xlsx("quizOneXls.xlsx", sheetIndex = 1, header = TRUE, colIndex = 7:15, rowIndex = 18:23)
sum(dat$Zip*dat$Ext,na.rm=T)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml", "quizOneXml.xml", mode = "wb")
library(XML)
library(xml)
install.packages("XML")
library(XML)
xmlData <- xmlTreeParse ("quizOneXml.xml", useInternal=TRUE)
rootNode <- xmlRoot(xmlData)
xpathSApply(torNode, "//zipcode", xmlValue)
xpathSApply(rootNode, "//zipcode", xmlValue)
doc <- htmlTreeParse("quizOneXml.xml", useInternal = TRUE)
xpathSApply(rootNode, "//zipcode", xmlValue)
zipList <- xpathSApply(rootNode, "//zipcode", xmlValue)
zipList == "21231"
zipList[zipList = "21231"]
zipList[zipList == "21231"]
nrow(zipList[zipList == "21231"])
length(zipList[zipList == "21231"])
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv", "quizOneCsv.csv", mode = "wb")
csvData <- read.csv("quizOneCsv.csv")
DT <- fread("quizOneCsv.csv")
library(fread)
install.packages("fread")
?fread
install.packages("data.table")
?fread
install.packages("fread")
library(data.table)
?fread
DT <- fread("quizOneCsv.csv")
system.time( replicate(10000, tapply(DT$pwgtp15,DT$SEX,mean) ) )
system.time( replicate(10, tapply(DT$pwgtp15,DT$SEX,mean) ) )
system.time( replicate(10, tapply(DT$pwgtp15,DT$SEX,mean) ) )
system.time( replicate(100, tapply(DT$pwgtp15,DT$SEX,mean) ) )
system.time( replicate(5000, tapply(DT$pwgtp15,DT$SEX,mean) ) )
system.time( replicate(5000, mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15) ) )
system.time( replicate(5000, mean(DT$pwgtp15,by=DT$SEX) ) )
system.time( replicate(5000, rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2] ) )
system.time( replicate(5000, sapply(split(DT$pwgtp15,DT$SEX),mean) ) )
system.time( replicate(5000, DT[,mean(pwgtp15),by=SEX] ) )
system.time( replicate(5000, mean(DT$pwgtp15,by=DT$SEX) ) )
sum(dat$Zip*dat$Ext,na.rm=T)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
library(httr)
install.packages("sqldf")
library(sqldf)
install.packages("RMySql")
install.packages("RMySQL")
setwd("C:\Users\Tym\Documents\Code\DataScience")
setwd("C:\\Users\\Tym\\Documents\\Code\\DataScience")
acs <- read.csv("getdata-data-ss06pid.csv")
sqldf("select pwgtp1 from acs where AGEP < 50")
acs
library(XML)
url <- http://biostat.jhsph.edu/~jleek/contact.html
url <- "http://biostat.jhsph.edu/~jleek/contact.html"
html <- htmlTreeParse(url, useInternalNodes = 1)
library(httr)
html2 <- GET("http://biostat.jhsph.edu/~jleek/contact.html")
content2 = content(html2, as="text")
parsesHtml = htmlParse(content2, asText=TRUE)
parsesHtml
parsesHtml[10]
htmlCode <- readLines(url("http://biostat.jhsph.edu/~jleek/contact.html"))
htmlCode[10]
nchar(htmlCode[10])
nchar(htmlCode[20])
nchar(htmlCode[30])
nchar(htmlCode[100])
x = readLines(url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"))
x <- read.fwf(
file=url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"),
skip=4,
widths=c(12, 7,4, 9,4, 9,4, 9,4))
x <- read.fwf(
file=url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"),
skip=4,
widths=c(12, 7,4, 9,4, 9,4, 9,4))
x
x[,9]
x
sum(x[,9], x[,4])
x <- read.fwf(
file=url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for "),
skip=4,
widths=c(12, 7,4, 9,4, 9,4, 9,4))
sum(x[,9], x[,4])
sum(x[,4])
x <- read.fwf(
file=url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"),
skip=4,
widths=c(12, 7,4, 9,4, 9,4, 9,4))
sum(x[,4])
